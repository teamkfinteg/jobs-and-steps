name: Python Script Workflow

on:
  workflow_dispatch:
  push:
    branches:
      - main  # Replace with your branch name if needed

jobs:
  #build:
  #  runs-on: ubuntu-latest  # You can change the runner as needed

  #  steps:
  #    - name: Checkout code
  #      uses: actions/checkout@v4  # Checkout the repository code
  #      env:
  #        GITHUB_TOKEN: ${{ secrets.SDK_SYNC_PAT }}

  #    - name: Set up Python
  #      uses: actions/setup-python@v4
  #      with:
  #        python-version: "3.10"  # Specify your desired Python version

  #    - name: Install Dependencies
  #      working-directory: ./code
  #      run: |
  #        python -m pip install --upgrade pip
  #        pip install --user -r requirements.txt
  run:
    runs-on: ubuntu-latest  # You can change the runner as needed
#    needs: build  # Specify the job that needs to be completed before this job can run
    steps:
      - name: set env.PR_BRANCH value for jobs
        run: |
          echo "github.repository: ${{github.repository}}"

      - name: Checkout code
        uses: actions/checkout@v4
        env:
          GITHUB_TOKEN: ${{ secrets.SDK_SYNC_PAT }}

      - name: Checkout tools
        uses: actions/checkout@v4
        with:
          repository: 'fiddlermikey/jobs-and-steps'
          path: 'tools'

        env:
          GITHUB_TOKEN: ${{ secrets.SDK_SYNC_PAT }}

      - name: Run Python Script
        working-directory: ./code
        run: |
          python main.py 
        env:
          GITHUB_TOKEN: ${{ secrets.SDK_SYNC_PAT }}

      - name: Save  Artifact
        if: success()
        uses: actions/upload-artifact@v3
        with:
          name: output.txt  # Specify the name for your artifact
          path: ./code/output.txt  # Replace with the actual path to your generated JSON file

      - name: Run test
        uses: ./tools/reqs

  deploy:
    needs:
      - run
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        env:
          GITHUB_TOKEN: ${{ secrets.SDK_SYNC_PAT }}

      - name: Install PyInstaller
        run: pip install pyinstaller

      - name: Build Binary with PyInstaller
        working-directory: ./code
        run: pyinstaller --name HelloWorld --onefile main.py

      - name: Upload Executable Artifact
        if: success()
        uses: actions/upload-artifact@v3
        with:
          name: HelloWorld.exe
          path: ./code/dist/HelloWorld # Adjust the path to the PyInstaller output
